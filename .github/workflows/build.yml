# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build CI

on: pull_request
env:
  MY_FEED_NODE_VERSION: 16.13.1
  MY_FEED_PACKAGE_MANAGER: yarn
  
  DOCKER_REGISTRY: ghcr.io
  DOCKER_USERNAME: ${{ github.actor }}
  DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  DOCKER_IMAGE_NAME: ${{ github.repository }}-${{ github.sha }}

jobs:

  test:

    runs-on: ubuntu-latest

    steps:
    
    - uses: actions/checkout@v2

    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: ${{ env. MY_FEED_PACKAGE_MANAGER }}

    - name: Installing dependencies
      run: ${{ env. MY_FEED_PACKAGE_MANAGER }}

    - name: Linting
      run: ${{ env. MY_FEED_PACKAGE_MANAGER }} lint

    - name: Running tests
      run: ${{ env. MY_FEED_PACKAGE_MANAGER }} test

  build:
  
    needs: test

    runs-on: ubuntu-latest

    steps:
    
    - uses: actions/checkout@v2

    - name: Log in to the Container registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.DOCKER_REGISTRY }}
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_PASSWORD }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
